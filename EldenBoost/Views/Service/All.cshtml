@model AllServicesQueryModel

@{
    ViewBag.Title = "All Services";
}

<div class="hero mb-3"></div>

<div class="container">

    <center>
        <h2 class="text-center py-2 mb-3" style="background-color: rgba(24, 20, 20, 0.5); border-radius: 16px; border: 1px solid var(--lightest); width: 28%;" id="serviceTitle">Select Service</h2>
    </center>

    <hr />

    <form method="get" class="mb-3">
        <div class="row">
            <div class="form-group col-md-3 d-flex justify-content-between">
                <div class="form-group">
                    <label asp-for="ServicesPerPage"></label>
                    <select asp-for="ServicesPerPage" class="form-control">
                        <option value="4">4</option>
                        <option value="8">8</option>
                        <option value="12">12</option>
                    </select>
                </div>
            </div>

            <div class="form-group col-md-3">
                <div class="form-group">
                    <label asp-for="ServiceSorting"></label>
                    <select asp-for="ServiceSorting" class="form-control">
                        <option value="0">Newest</option>
                        <option value="1">Oldest</option>
                        <option value="2">Price (Ascending)</option>
                        <option value="3">Price (Descending)</option>
                    </select>
                </div>
            </div>

            <div class="form-group col-md-3">
                <label asp-for="SearchString"></label>
                <input asp-for="SearchString" class="form-control" placeholder="...">
            </div>
            <div class="col-md-3 text-end">
                <div class="form-group mt-3 p-2">
                    <input type="submit" value="Submit" class="btn btn-outline-light" />
                </div>
            </div>
        </div>
    </form>


    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        var maxPage = Math.Ceiling((double)Model.TotalServices /
        Model.ServicesPerPage);
    }



    @if (!Model.Services.Any())
    {
        <h2 class="text-center">No Services found by the given criteria!</h2>
    }

    <div class="row" id="cards-div">
        @foreach (var service in Model.Services)
        {
            <partial name="_ServicePartial" model="@service" />
        }
    </div>

    <div class="row mb-3">
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
            <a class="btn btn-outline-light @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Service"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.ServiceSorting)"><i class="fa-solid fa-left-long"></i></a>
        </div>

        @{
            var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
            !Model.Services.Any();
        }

        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
            <a class="btn btn-outline-light @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Service"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.ServiceSorting)"><i class="fa-solid fa-right-long"></i></a>
        </div>
    </div>

</div>

<hr />

@await Component.InvokeAsync("FaqComponent")