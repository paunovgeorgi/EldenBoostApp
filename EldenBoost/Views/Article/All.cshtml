@model AllArticlesQueryModel

@{
    ViewBag.Title = "All Articles";
}

<div class="hero mb-3"></div>

<h2 class="text-center" id="articleTitle">@ViewBag.Title</h2>
<hr />

<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="ArticlesOnPage"></label>
                <select asp-for="ArticlesOnPage" class="form-control">
                    <option value="4">4</option>
                    <option value="8">8</option>
                    <option value="12">12</option>
                </select>
            </div>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="ArticleSorting"></label>
                <select asp-for="ArticleSorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Type</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mt-3 p-2">
                <input type="submit" value="Submit" class="btn btn-outline-light" />
            </div>
        </div>
    </div>
</form>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalArticles /
        Model.ArticlesOnPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-outline-light @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Article"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.ArticleSorting)"><i class="fa-solid fa-left-long"></i></a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Articles.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-outline-light
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Article"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.ArticleSorting)"><i class="fa-solid fa-right-long"></i></a>
    </div>
</div>

@if (!Model.Articles.Any())
{
    <h2 class="text-center">No Articles found by the given criteria!</h2>
}

<div class="row">
    @foreach (var article in Model.Articles)
    {
        <partial name="_ArticlePartial" model="@article" />
    }
</div>

<hr />

@await Component.InvokeAsync("FaqComponent")