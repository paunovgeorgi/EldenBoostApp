@model AllArticlesQueryModel

@{
    ViewBag.Title = "All Articles";
}

<div class="hero mb-3"></div>

<h2 class="text-center" id="articleTitle">@ViewBag.Title</h2>
<hr />

<form method="get" class="mb-3">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="ArticlesOnPage"></label>
                <select asp-for="ArticlesOnPage" class="form-control">
                    <option value="6">6</option>
                    <option value="9">9</option>
                    <option value="12">12</option>
                </select>
            </div>
        </div>
       

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="ArticleSorting"></label>
                <select asp-for="ArticleSorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Type</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="...">
        </div>

        <div class="col-md-3 text-end">
            <div class="form-group mt-3 p-2">
                <input type="submit" value="Submit" class="btn btn-outline-light" />
            </div>
        </div>
    </div>
</form>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalArticles /
        Model.ArticlesOnPage);
}

@if (!Model.Articles.Any())
{
    <h2 class="text-center">No Articles found by the given criteria!</h2>
}

<div class="row">
    @foreach (var article in Model.Articles)
    {
        <partial name="_ArticlePartial" model="@article" />
    }
</div>

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-outline-light @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Article"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.ArticleSorting)"><i class="fa-solid fa-left-long"></i></a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Articles.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-outline-light
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Article"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.ArticleSorting)"><i class="fa-solid fa-right-long"></i></a>
    </div>
</div>

<hr />

<div class="page-content my-5 shadow-lg" style="padding: 3rem; border: 1px  var(--lightest); border-style:outset; background-color: rgba(24, 20, 20, 0.2); border-left: none; border-top: none;">
    <h3 style="color: var(--lightest)">About our Elden Ring Boost Services</h3>
    <p>Released in early 2022, Elden Ring is the latest masterpiece in FromSoftware's long history of challenging third-person Action RPGs. As the newest addition to the Soulsborne lineage—built upon the foundations laid by its predecessors Dark Souls, Demon's Souls, and Bloodborne—Elden Ring had immense expectations to meet. And meet them it did, exceeding all anticipation.</p>
    <p>Taking the gaming world by storm, Elden Ring quickly became one of the most critically acclaimed titles ever, with millions of copies sold even before launch, fueled by an unparalleled hype train. This success was recently bolstered by the release of its highly anticipated expansion, Shadow of the Erdtree.</p>
    <p>Elden Ring didn't just deliver scale—it redefined it. The game improved upon the mechanics that made FromSoftware’s previous titles iconic, introducing features like jumping, mount riding, and enhanced verticality in level design. It combined the deliberate pacing of Dark Souls with the fast, fluid combat of Bloodborne, all while retaining the soul-crushing challenge that defines the series.</p>
    <p>However, one thing remained unchanged: the unrelenting difficulty that makes Soulsborne games legendary. Elden Ring is brutally hard, with one infamous boss racking up over 329 million player deaths within the first few months of release. Paired with the overwhelming variety of builds and gameplay options, it can be a steep learning curve, especially for newcomers to the franchise.</p>
</div>
<div class="page-content my-5 shadow" style="padding: 3rem; border: 1px  var(--lightest); border-style:outset; background-color: rgba(24, 20, 20, 0.2); border-right: none; border-top: none;">
    <h3 style="color: var(--lightest)">Why Should You Choose EldenBoost for Your Elden Ring Boosting Needs?</h3>
    <p>Our EldenBoost services are crafted for both veteran Soulsborne players and newcomers alike. Whether you’re looking to make your journey through the Lands Between more enjoyable or simply save time, we’re here to help. Skip the grind and focus on the parts of the game you enjoy most!</p>
    <p>Struggling with a particularly challenging boss? Need runes, crafting materials, or rare armor sets? Farming these items can take hours of effort and require a huge time investment. The grind only intensifies with the launch of the Shadow of the Erdtree DLC, which raises the bar on both scale and difficulty.</p>
    <p>That’s where EldenBoost comes in. We help you make the most of your time in the Lands Between, so you can focus on the adventure without the frustration.</p>
    <p>Have questions or need help setting up your service? Our 24/7 Customer Support Team is always available. Just click the Live Chat button at the bottom-right corner of the page, and we’ll be happy to assist you.</p>
</div>

<hr />

@await Component.InvokeAsync("FaqComponent")